- name: set up for k8s
  hosts: workers
  become: yes
  user: admbvtech
  vars:
    - userpass: "Temporanea.1234"
  gather_facts: true
  tasks:
  - name: create docker group
    group:
      name: "docker"
  - name: create kubernetes-prd.sudo group
    group:
      name: "kubernetes-prd.sudo"
  - name: sudo for kubernetes-prd group
    lineinfile:
      dest: "/etc/sudoers"
      state: "present"
      regexp: "^%kubernetes-prd.sudo"
      line: "%kubernetes-prd.sudo ALL=(ALL) ALL"
  - name: create user
    user:
      name: "{{ item }}"
      groups:
        - docker
        - kubernetes-prd.sudo
      password: "{{ userpass | string | password_hash('sha512', 'mysecretsalt') }}"
    loop:
      - "ff3dadmin"
      - "ff3dop"
      - "svck8s"

  - name: Put SELinux in permissive mode
    selinux:
      policy: targeted
      state: permissive

  - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
    shell: |
      swapoff -a

  - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+.*)$'
      replace: '# \1'

  - name: Load required modules
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - br_netfilter
      - overlay
      - ip_vs
      - ip_vs_rr
      - ip_vs_wrr
      - ip_vs_sh
      - nf_conntrack_ipv4

  - name: Modify sysctl entries
    sysctl:
      name: '{{ item.key }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
    ignore_errors: True
    with_items:
      - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
      - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
      - {key: net.ipv4.ip_forward,  value: 1}
  
  - name: overwrite /etc/default/grub
    copy:
      src: etc/default/grub
      dest: /etc/default/grub
      owner: root
      group: root
  - name: mkgrub
    command:
      cmd: grub2-mkconfig -o /boot/grub2/grub.cfg
  
  - name: Remove the swap LV
    lvol:
      vg: vg00
      lv: swap
      state: absent
      force: yes
  
  - name: setup chrony.conf
    template:
      src: etc/chrony.conf.j2
      dest: /etc/chrony.conf
      owner: root
      group: root
  - name: setup step tickers
    template:
      src: etc/ntp/step-tickers.j2
      dest: /etc/ntp/step-tickers
      owner: root
      group: root
  - name: restart chrony
    systemd:
      name: chronyd
      state: restarted
      enabled: yes

  - name: create rekeep-specific users
    user:
      name: "{{ item }}"
    loop:
      - nagios
      - nimsplus
  - name: create rekeep-specific crstaff
    group:
      name: crstaff
      gid: 30000
  - name: create rekeep-specific crstaff users
    user:
      name: "{{ item }}"
      group: crstaff
      password: "{{ rampass | string | password_hash('sha512', 'mysecretsalt') }}"
    loop:
      - ramuser
      - ramfr-bvtech

  - name: sudoers Cmnd_Alias block
    blockinfile:
        path: /etc/sudoers
        state: present
        block: |
          ####### Comandi abilitati ########################################################################
          Cmnd_Alias ALLCOMMAND =  /bin/*, /sbin/*, /usr/bin/*, /usr/sbin/*, /usr/local/bin/*, /usr/local/sbin/*, /opt/OV/bin/*
          ##################################################################################################
          ####### Comandi disabilitati #####################################################################
          Cmnd_Alias  NO_COMMAND = !/bin/su, !/usr/sbin/useradd, !/usr/sbin/usermod, !/usr/sbin/userdel, !/*bin/* *passwd*, !/*bin/* *group*, !/*bin/* *shadow*, !/*bin/* *sudoers*, !/usr/bin/chattr, !/usr/bin/at, !/usr/bin/crontab -e,  !/usr/bin/rz, !/*/*/scp, !/*/*/*ftp, !/*/*/*/scp, !/*/*/*/*ftp, !/*/scp, !/*/*ftp, !/bin/* * /etc/*, !/usr/bin/passwd, !/bin/touch /usr/bin/*, !/usr/bin/setfacl, !/usr/bin/getfacl, !/usr/bin/chacl, !/bin/ln *passwd*,  !/sbin/init,  !/sbin/telinit , !/usr/sbin/xinetd, !/usr/bin/find *exec*, !/usr/bin/make, !/usr/bin/* *system*, !/usr/bin/* *signal*
          Cmnd_Alias  NO_SHELLS =  !/*bin/*sh*, !/bin/* *sh *, !/usr/bin/* *sh, !/usr/local/bin/* *sh, !/opt/OV/bin/* *sh, !/sbin/* *sh
          ##################################################################################################
          Cmnd_Alias     CMD = ALLCOMMAND, NO_COMMAND, NO_SHELLS
  - name: nopasswd sudo for sudo group
    lineinfile:
      dest: "/etc/sudoers"
      state: "present"
      regexp: "^%sudo"
      line: "%sudo ALL=(ALL) NOPASSWD: ALL"
  - name: nopasswd sudo /usr/bin/passwd for ramuser
    lineinfile:
      dest: "/etc/sudoers"
      state: "present"
      line: "ramuser ALL = NOPASSWD: /usr/bin/passwd"
  - name: nopasswd bash for ramfr-bvtech
    lineinfile:
      dest: "/etc/sudoers"
      state: present
      line: "ramfr-bvtech ALL = NOPASSWD: /bin/bash"
  - name: nopasswd CMD for group crstaff
    lineinfile:
      dest: "/etc/sudoers"
      state: present
      line: "%crstaff ALL = NOPASSWD: CMD"

  - name: disable AcceptEnv per le variabili LC_
    lineinfile:
      dest: "/etc/ssh/sshd_config"
      regexp: "^AcceptEnv LC_"
      state: absent
  - name: disable AcceptEnv per le variabili LANG
    lineinfile:
      dest: "/etc/ssh/sshd_config"
      regexp: "^AcceptEnv LANG"
      state: absent

  - name: add line to /etc/hosts
    lineinfile:
      dest: /etc/hosts
      state: present
      line: 192.168.10.100  ssb-manutencoop.telecomitalia.it

  - name: copying Bladelogic RPM
    copy:
      src: /iso/software/RSCD/RSCD89-SP4-LIN64.rpm
      dest: /tmp/RSCD89-SP4-LIN64.rpm
  - name: local installation of Bladelogic
    command:
      cmd: yum -y localinstall /tmp/RSCD89-SP4-LIN64.rpm
    environment:
      http_proxy: "http://10.10.10.31:8080"
      https_proxy: "http://10.10.10.31:8080"
  - name: Bladelogic exports file
    copy:
      src: etc/rsc/exports
      dest: /etc/rsc/exports
      owner: root
      group: root
  - name:
    command:
      cmd: chkconfig --add rscd
  - name: Restart and enable Bladelogic
    service:
      name: rscd
      state: restarted
      enabled: yes

  - name: copying Syslog-NG Premium
    copy:
      src: /iso/software/SYSLOG-NG/syslog-ng-premium-edition-7.0.3-1.rhel7.x86_64.rpm
      dest: /tmp/syslog-ng-premium-edition-7.0.3-1.rhel7.x86_64.rpm
  - name: local installation of Syslog-NG Premium
    command:
      cmd: yum -y localinstall /tmp/syslog-ng-premium-edition-7.0.3-1.rhel7.x86_64.rpm
    environment:
      http_proxy: "http://10.10.10.31:8080"
      https_proxy: "http://10.10.10.31:8080"
  - name: systemctl daemon-reload
    systemd:
      daemon_reload: yes
  - name: enable and restart rsyslog and syslog-ng
    systemd:
      name: "{{ item }}"
      state: restarted
      enabled: yes
    loop:
      - rsyslog
      - syslog-ng
